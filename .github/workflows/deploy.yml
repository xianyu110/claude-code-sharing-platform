name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build and optimize
      run: |
        # 创建构建目录
        mkdir -p dist/css dist/js dist/pages
        
        # 压缩CSS
        npx clean-css-cli -o dist/css/style.min.css css/style.css
        npx clean-css-cli -o dist/css/auth.min.css css/auth.css
        
        # 压缩JS
        npx terser js/script.js -o dist/js/script.min.js --compress --mangle
        npx terser js/auth.js -o dist/js/auth.min.js --compress --mangle
        
        # 复制HTML文件并更新引用
        cp index.html dist/
        cp pages/*.html dist/pages/
        
        # 更新HTML中的资源引用为压缩版本
        sed -i 's/css\/style\.css/css\/style.min.css/g' dist/index.html
        sed -i 's/css\/auth\.css/css\/auth.min.css/g' dist/pages/*.html
        sed -i 's/js\/script\.js/js\/script.min.js/g' dist/index.html
        sed -i 's/js\/auth\.js/js\/auth.min.js/g' dist/pages/*.html
        
        # 复制其他必要文件
        cp README.md dist/ 2>/dev/null || true
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4